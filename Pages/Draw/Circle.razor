@page "/Draw/Circle"


<h3>Draw Circle</h3>
<EditForm Model="@circle" OnValidSubmit="HandleValidSubmit" class="row g-3">
    <DataAnnotationsValidator />
    <ValidationSummary />


    <div class="col-md-4">
        <label for="XStart" class="form-label">X</label>
        <input type="number" class="form-control" id="XStart" @bind-value="circle.X">
    </div>
    <div class="col-md-4">
        <label for="YStart" class="form-label">Y</label>
        <input type="number" class="form-control" id="YStart" @bind-value="circle.Y">
    </div>
    <div class="col-md-4"></div>
    
    <div class="col-md-3">
        <label for="Radius" class="form-label">Radius</label>
        <InputNumber class="form-control" id="Radius" @bind-value="circle.Radius">
        </InputNumber>
    </div>
    
    <div class="col-12">
        <button type="submit" class="btn btn-primary">Draw</button>
    </div>
</EditForm>
<br/>
<br/>
<CircleBresTable ShapePoints="@points" />

@code {
    
    private static int id = 1;
    BresPointInfo[] points = [];
    private CircleModel circle = new CircleModel
    {
        name = $"circle{id++}",
        X = 0,
        Y = 0,
        color = "#eb5e34"
    };

    private async Task HandleValidSubmit(EditContext obj)
    {
        points = (circle.GetIndexes() as IEnumerable<BresPointInfo>)?.ToArray() ?? [];
    }

}