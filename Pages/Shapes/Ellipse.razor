@page "/Shapes/Ellipse"


<h3>Draw Ellipse</h3>
<EditForm Model="@ellipse" OnValidSubmit="HandleValidSubmit" class="row g-3">
    <DataAnnotationsValidator />
    <ValidationSummary />


    <div class="col-md-4">
        <label for="XStart" class="form-label">X</label>
        <input type="number" class="form-control" id="XStart" @bind-value="ellipse.x">
    </div>
    <div class="col-md-4">
        <label for="YStart" class="form-label">Y</label>
        <input type="number" class="form-control" id="YStart" @bind-value="ellipse.y">
    </div>
    <div class="col-md-4"></div>

    <div class="col-md-3">
        <label for="RadiusX" class="form-label">Radius x</label>
        <InputNumber class="form-control" id="RadiusX" @bind-value="ellipse.Rx">
        </InputNumber>
    </div>
    <div class="col-md-3">
        <label for="RadiusY" class="form-label">Radius Y</label>
        <InputNumber class="form-control" id="RadiusY" @bind-value="ellipse.Ry">
        </InputNumber>
    </div>

    <div class="col-12">
        <button type="submit" class="btn btn-primary">Calculate</button>
    </div>
</EditForm>
<br/>
<br/>
<Board imgURL="@ellipse.ImgSrc"></Board>
<EllipseTable ShapePoints="@points"></EllipseTable>

@code {

    EllipsePoint[] points = [];
    private EllipseModel ellipse = new EllipseModel
    {
        x = 0,
        y = 0,
        Rx = 10,
        Ry = 10,
    };

    private async Task HandleValidSubmit() => InvokeAsync(Draw);
    private async Task Draw()
    {
        points = (ellipse.GetAllPoints() as IEnumerable<EllipsePoint>)?.ToArray() ?? [];
        ImageBuilder builder = new();

        ellipse.ImgSrc = $"{builder.SetShape(ellipse).Builed().Save("ellipse")}?v={DateTime.Now.Ticks}";
        StateHasChanged();
    }

}